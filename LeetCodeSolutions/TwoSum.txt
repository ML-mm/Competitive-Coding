class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> newans;
	    unordered_map<int, int> indices;

	    for (int i = 0; i < nums.size(); ++i) {
		    if (indices.find(target - nums[i]) != indices.end()) {
			    newans.push_back(i); // PUSHES BACK CURR INDEX
			    newans.push_back(indices.find(target - nums[i])->second); //PUSH BACK INDEX OF KEY ALREADY INSERTED
		    }
		    else {
			    indices[nums[i]] = i; // PUSHES BACK INDEX OF KEY, I.E 3 WOULD BE INDEX 0 , 2 WOULD BE INDEX 1;
		    }
	    } return newans;
      }
};